import { createSlice, PayloadAction } from "@reduxjs/toolkit";
import { TempChatMessage } from "../interfaces/socket";

// Define the interface for the state
interface PairedChatLogsState {
  messages: TempChatMessage[] | null;
}

// Set the initial state
const initialState: PairedChatLogsState = {
  messages: null,
};

// Create a Redux Toolkit slice
const pairedChatLogsSlice = createSlice({
  name: "pairedChatLog",
  initialState,
  reducers: {
    // Reducer function for handling the "receiveChatMessage" action
    receiveChatMessage: (state, action: PayloadAction<TempChatMessage>) => {
      if (state.messages) {
        // If messages array exists, push the new message
        state.messages.push(action.payload);
      } else {
        // If messages array doesn't exist, initialize it with the new message
        state.messages = [action.payload];
      }
    },
  },
});

// Export the action creator generated by createSlice
export const { receiveChatMessage } = pairedChatLogsSlice.actions;

// Export the reducer generated by createSlice
export default pairedChatLogsSlice.reducer;
